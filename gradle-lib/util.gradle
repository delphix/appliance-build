/*
 * Copyright 2019 Delphix
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import java.nio.file.Files
import java.nio.file.Paths
import java.nio.file.attribute.PosixFilePermissions
import java.util.regex.Pattern

ext.allPlatforms = ["aws", "azure", "esx", "gcp", "kvm"]
ext.allVariants = new File("${rootProject.projectDir}/live-build/variants").list()
ext.allInternal = allVariants.findAll { it.startsWith("internal-") }
ext.allExternal = allVariants.findAll { it.startsWith("external-") }

/*
 * Turns a hyphenated name into a camelCase name, e.g. 'foo-bar' into 'fooBar'
 */
ext.toCamelCase = { hyphenatedName ->
    def matcher = Pattern.compile("-\\w").matcher(hyphenatedName)
    def output = new StringBuffer()
    while (matcher.find()) {
        matcher.appendReplacement(output, matcher.group().substring(1).toUpperCase())
    }
    matcher.appendTail(output);
    return output.toString()
}

ext.createArtifactsDirTask = { project ->
    project.tasks.register("mkArtifactsDir") {
        doFirst {
            mkdir "${buildDir}/artifacts"

            // Make directories world writable so that they are writable by Jenkins
            def perms = PosixFilePermissions.fromString("rwxrwxrwx")
            Files.setPosixFilePermissions(Paths.get("${buildDir}"), perms)
            Files.setPosixFilePermissions(Paths.get("${buildDir}/artifacts"), perms)
        }
    }
}
