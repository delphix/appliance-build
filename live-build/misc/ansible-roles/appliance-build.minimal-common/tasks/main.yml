#
# Copyright 2018 Delphix
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

---
#
# When using the APPLIANCE_PASSWORD variable, we have to be careful to
# specify "no_log" to prevent it from being leaked to stdout (e.g. if
# ansible is run with verbosity).
#
- fail:
    msg: "Required environment variable 'APPLIANCE_PASSWORD' is empty."
  when: lookup('env', 'APPLIANCE_PASSWORD') == ''
  no_log: true

- file:
    path: /export/home
    state: directory
    mode: 0755

- user:
    name: delphix
    uid: 65433
    group: staff
    groups: root
    shell: /bin/bash
    create_home: yes
    comment: Delphix User
    home: /export/home/delphix
    password:
      "{{ lookup('env', 'APPLIANCE_PASSWORD') | password_hash('sha512') }}"

- user:
    name: root
    password:
      "{{ lookup('env', 'APPLIANCE_PASSWORD') | password_hash('sha512') }}"

#
# The virtualization package uses the /etc/issue file to store a
# customer-supplied banner that is displayed prior to login. By default,
# there should be no banner. Thus, we need to remove this file to
# acheive our desired behavior; Ubuntu ships with this file by default.
#
- file:
    path: /etc/issue
    state: absent

- apt_repository:
    repo: "{{ item }}"
  with_items:
    - deb http://ddebs.ubuntu.com bionic main restricted universe multiverse
    - deb http://ddebs.ubuntu.com bionic-updates main restricted universe multiverse
    - deb http://ddebs.ubuntu.com bionic-proposed main restricted universe multiverse
  retries: 3
  delay: 30
  register: result
  until: result is succeeded

- shell: ls /lib/modules
  register: kernel_versions

- apt:
    name: 'linux-image-{{ item }}-dbgsym'
  with_items:
    - '{{ kernel_versions.stdout_lines }}'
  retries: 3
  delay: 30
  register: result
  until: result is succeeded
