#!/bin/bash
#
# Copyright 2018 Delphix
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

. "${BASH_SOURCE%/*}/common.sh"

IMAGE_VERSION=$(get_image_version)
[[ -n "$IMAGE_VERSION" ]] || die "failed to determine image version"

function usage() {
	echo "$(basename "$0"): $*" >&2
	echo "Usage: $(basename "$0") [-d] [-f format] [-l locale] [-o path]"
	exit 2
}

function cleanup() {
	local rc="$?"

	#
	# Persist container logs by saving to the container's host.
	# Delete and create verify log destination directory to save only one copy of log to limit
	# space usage.
	#
	rm -rf "${UPDATE_VERIFY_LOG_DIR:?}" ||
		die "Failed to remove verify log directory ${UPDATE_VERIFY_LOG_DIR}."
	mkdir -p "${UPDATE_VERIFY_LOG_DIR}/${CONTAINER}" ||
		die "Failed to create verify log directory ${UPDATE_VERIFY_LOG_DIR}/${CONTAINER}."
	${SUPPORT_INFO_SCRIPT} -s -o "${UPDATE_VERIFY_LOG_DIR}/${CONTAINER}" -t "log dropbox" ||
		die "Failed to collect verify logs."

	return "$rc"
}

opt_d=false
while getopts ':df:l:o:' c; do
	case "$c" in
	f | l | o) eval "opt_$c=$OPTARG" ;;
	d) eval "opt_$c=true" ;;
	*) usage "illegal option -- $OPTARG" ;;
	esac
done

[[ "$EUID" -ne 0 ]] && die "must be run as root"

if [[ -n "$DLPX_DEBUG" ]] && $DLPX_DEBUG; then
	VERIFY_DEBUG_OPT="-Ddelphix.debug=true"
fi

if $opt_d; then
	VERIFY_LIVE_MDS_OPT="-disableConsistentMdsZfsDataUtil"
fi

trap cleanup EXIT

/usr/bin/java \
	-Dlog.dir=/var/delphix/server/upgrade-verify \
	-Dmdsverify=true \
	$VERIFY_DEBUG_OPT \
	-jar /opt/delphix/server/lib/exec/upgrade-verify/upgrade-verify.jar \
	-d "${opt_o:-$DROPBOX_DIR/upgrade_verify_report.json}" \
	-f "${opt_f:-1}" \
	-l "${opt_l:-en-US}" \
	-v "$IMAGE_VERSION" \
	-pl 60 -ph 80 \
	$VERIFY_LIVE_MDS_OPT ||
	die "'upgrade-verify.jar' failed in verification container"

#
# This name is used by the "upgrade-verify.jar" just executed, so we
# cannot change this value without also modifying that JAR.
#
MDS_SNAPNAME="MDS-CLONE-upgradeverify"

/opt/delphix/server/bin/dx_manage_pg stop -s "$MDS_SNAPNAME" ||
	die "failed to stop postgres"

/opt/delphix/server/bin/dx_manage_pg cleanup -s "$MDS_SNAPNAME" ||
	die "failed to cleanup postgres"

exit 0
