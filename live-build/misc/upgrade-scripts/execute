#!/bin/bash
#
# Copyright 2018 Delphix
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

. "${BASH_SOURCE%/*}/common.sh"

IMAGE_VERSION=$(get_image_version)
[[ -n "$IMAGE_VERSION" ]] || die "failed to determine image version"

set -o pipefail

function usage() {
	echo "$(basename "$0"): $*" >&2
	echo "Usage: $(basename "$0") <version>"
	exit 2
}

function apt_get() {
	DEBIAN_FRONTEND=noninteractive apt-get \
		-o Dpkg::Options::="--force-confdef" \
		-o Dpkg::Options::="--force-confold" \
		"$@"
}

while getopts ':rlBfs' c; do
	case $c in
	r | l | B | f | s) ;; # LX-72: For now, silently ignore these.
	*) usage "illegal options -- $OPTARG" ;;
	esac
done

[[ -d "$UPDATE_DIR" ]] || die "update directory '$UPDATE_DIR' does not exist"
[[ -d "$UPDATE_DIR/$IMAGE_VERSION" ]] ||
	die "upgrade image for version '$IMAGE_VERSION' was not unpacked"
[[ -f "$UPDATE_DIR/$IMAGE_VERSION/version.info" ]] ||
	die "upgrade image for version '$IMAGE_VERSION' is missing version.info"

#
# We need to be careful when sourcing this file, since it can conflict
# with (and clobber) functions and/or variables previously defined.
#
. "$UPDATE_DIR/$IMAGE_VERSION/version.info" ||
	die "failed to source version.info file for version '$IMAGE_VERSION'"

[[ -n "$VERSION" ]] ||
	die "VERSION variable is empty after sourcing version.info"

[[ -n "$MINIMUM_VERSION" ]] ||
	die "MINIMUM_VERSION variable is empty after sourcing version.info"

cat <<EOF >/etc/apt/sources.list ||
deb [trusted=yes] file://$UPDATE_DIR/$IMAGE_VERSION/public cosmic delphix
EOF
	die "failed to configure apt sources"

apt_get update || die "failed to update apt sources"

INSTALLED_VERSION=$(dpkg-query -Wf '${Version}' delphix-entire)

#
# It's possible for delphix-entire not to be already installed on the
# root filesystem being upgraded when we're doing a not-in-place upgrade.
# Thus, when we can't determine the installed version of delphix-entire,
# we assume we're doing a not-in-place upgrade, and skip this check.
#
if [[ -n "$INSTALLED_VERSION" ]]; then
	dpkg --compare-versions "$INSTALLED_VERSION" "ge" "$MINIMUM_VERSION" ||
		die "upgrade not allowed;" \
			"installed version ($INSTALLED_VERSION)" \
			"is less than minimum version ($MINIMUM_VERSION)"
fi

apt_get install -y "delphix-entire=$VERSION" ||
	die "upgrade failed; from '$INSTALLED_VERSION' to '$VERSION'"

exit 0
